//
// ValuesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class ValuesAPI: APIBase {
    /**
     - parameter id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func valuesDelete(id: Int32, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        valuesDeleteWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     - DELETE /api/Values/{id}
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter id: (path)  
     - returns: RequestBuilder<Void> 
     */
    open class func valuesDeleteWithRequestBuilder(id: Int32) -> RequestBuilder<Void> {
        var path = "/api/Values/{id}"
        let idPreEscape = "\(id)"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func valuesGet(completion: @escaping ((_ data: [String]?, _ error: ErrorResponse?) -> Void)) {
        valuesGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Values
     - OAuth:
       - type: oauth2
       - name: oauth2
     - examples: [{contentType=application/json, example=[ "", "" ]}, {contentType=application/xml, example=aeiou}]
     - examples: [{contentType=application/json, example=[ "", "" ]}, {contentType=application/xml, example=aeiou}]
     - returns: RequestBuilder<[String]> 
     */
    open class func valuesGetWithRequestBuilder() -> RequestBuilder<[String]> {
        let path = "/api/Values"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[String]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     - parameter id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func valuesGet_0(id: Int32, completion: @escaping ((_ data: String?, _ error: ErrorResponse?) -> Void)) {
        valuesGet_0WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Values/{id}
     - OAuth:
       - type: oauth2
       - name: oauth2
     - examples: [{contentType=application/json, example=""}, {contentType=application/xml, example=aeiou}]
     - examples: [{contentType=application/json, example=""}, {contentType=application/xml, example=aeiou}]
     - parameter id: (path)  
     - returns: RequestBuilder<String> 
     */
    open class func valuesGet_0WithRequestBuilder(id: Int32) -> RequestBuilder<String> {
        var path = "/api/Values/{id}"
        let idPreEscape = "\(id)"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     - parameter value: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func valuesPost(value: String, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        valuesPostWithRequestBuilder(value: value).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     - POST /api/Values
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter value: (body)  
     - returns: RequestBuilder<Void> 
     */
    open class func valuesPostWithRequestBuilder(value: String) -> RequestBuilder<Void> {
        let path = "/api/Values"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = value.encodeToJSON()

        let url = NSURLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     - parameter id: (path)  
     - parameter value: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func valuesPut(id: Int32, value: String, completion: @escaping ((_ error: ErrorResponse?) -> Void)) {
        valuesPutWithRequestBuilder(id: id, value: value).execute { (response, error) -> Void in
            completion(error)
        }
    }


    /**
     - PUT /api/Values/{id}
     - OAuth:
       - type: oauth2
       - name: oauth2
     - parameter id: (path)  
     - parameter value: (body)  
     - returns: RequestBuilder<Void> 
     */
    open class func valuesPutWithRequestBuilder(id: Int32, value: String) -> RequestBuilder<Void> {
        var path = "/api/Values/{id}"
        let idPreEscape = "\(id)"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = value.encodeToJSON()

        let url = NSURLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
